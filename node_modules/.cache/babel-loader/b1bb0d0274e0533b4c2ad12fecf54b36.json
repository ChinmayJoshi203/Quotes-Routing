{"ast":null,"code":"var _jsxFileName = \"/home/excellarate/Desktop/Projects/quotes-routing/src/components/comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"../comments/CommentsList\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteid\n  } = params;\n  {\n    console.log(params);\n  }\n  const {\n    sendRequest,\n    status,\n    data: loadedComments,\n    error\n  } = useHttp(getAllComments);\n  let comments;\n  useEffect(() => {\n    sendRequest(quoteid);\n  }, [sendRequest, quoteid]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = () => {};\n\n  if (status === \"pending\") {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === \"completed\" && (!loadedComments || loadedComments.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focussed\",\n      children: \"No comments!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteid: quoteid,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"DMuWeBOWusTCjKIbHOUTF6A545E=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","useParams","useHttp","getAllComments","LoadingSpinner","CommentsList","classes","NewCommentForm","Comments","isAddingComment","setIsAddingComment","params","quoteid","console","log","sendRequest","status","data","loadedComments","error","comments","startAddCommentHandler","addedCommentHandler","length"],"sources":["/home/excellarate/Desktop/Projects/quotes-routing/src/components/comments/Comments.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"../comments/CommentsList\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteid } = params;\n  {console.log(params)}\n  const {\n    sendRequest,\n    status,\n    data: loadedComments,\n    error,\n  } = useHttp(getAllComments);\n\n  let comments;\n  useEffect(() => {\n    sendRequest(quoteid);\n  }, [sendRequest, quoteid]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = () => {};\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered focussed\">No comments!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteid={quoteid}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAMW,MAAM,GAAGV,SAAS,EAAxB;EACA,MAAM;IAAEW;EAAF,IAAcD,MAApB;EACA;IAACE,OAAO,CAACC,GAAR,CAAYH,MAAZ;EAAoB;EACrB,MAAM;IACJI,WADI;IAEJC,MAFI;IAGJC,IAAI,EAAEC,cAHF;IAIJC;EAJI,IAKFjB,OAAO,CAACC,cAAD,CALX;EAOA,IAAIiB,QAAJ;EACArB,SAAS,CAAC,MAAM;IACdgB,WAAW,CAACH,OAAD,CAAX;EACD,CAFQ,EAEN,CAACG,WAAD,EAAcH,OAAd,CAFM,CAAT;;EAIA,MAAMS,sBAAsB,GAAG,MAAM;IACnCX,kBAAkB,CAAC,IAAD,CAAlB;EACD,CAFD;;EAIA,MAAMY,mBAAmB,GAAG,MAAM,CAAE,CAApC;;EAEA,IAAIN,MAAM,KAAK,SAAf,EAA0B;IACxBI,QAAQ,gBACN;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EAED,IAAIJ,MAAM,KAAK,WAAX,IAA0BE,cAA1B,IAA4CA,cAAc,CAACK,MAAf,GAAwB,CAAxE,EAA2E;IACzEH,QAAQ,gBAAG,QAAC,YAAD;MAAc,QAAQ,EAAEF;IAAxB;MAAA;MAAA;MAAA;IAAA,QAAX;EACD;;EACD,IACEF,MAAM,KAAK,WAAX,KACC,CAACE,cAAD,IAAmBA,cAAc,CAACK,MAAf,KAA0B,CAD9C,CADF,EAGE;IACAH,QAAQ,gBAAG;MAAG,SAAS,EAAC,mBAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAX;EACD;;EAED,oBACE;IAAS,SAAS,EAAEd,OAAO,CAACc,QAA5B;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEG,CAACX,eAAD,iBACC;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAEY,sBAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EAOGZ,eAAe,iBACd,QAAC,cAAD;MACE,OAAO,EAAEG,OADX;MAEE,cAAc,EAAEU;IAFlB;MAAA;MAAA;MAAA;IAAA,QARJ,EAaGF,QAbH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CA1DD;;GAAMZ,Q;UAEWP,S,EAQXC,O;;;KAVAM,Q;AA4DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}